"use strict";var appendPrefixPreventingSubstitutionByGruntReplaceAndUglify=function(a){return"@@"+a},variableNameThatShouldNotBeReplaced=appendPrefixPreventingSubstitutionByGruntReplaceAndUglify("___ENV_REPLACE_WORKAROUND___"),replaceTaskInvoked="42"!==variableNameThatShouldNotBeReplaced;angular.module("amvGeolocationUi",["ngAnimate","ngCookies","ngMessages","ngSanitize","ngTouch","ui.router","ui-leaflet","knalli.angular-vertxbus","js-data"]).factory("Materialize",["$window",function(a){return a.Materialize}]).factory("amvTrafficsoftRestJs",["$window",function(a){return a.amvTrafficsoftRestJs}]).factory("DSLocalForageAdapter",["$window",function(a){return a.DSLocalForageAdapter}]).run(["DS","DSLocalForageAdapter",function(a,b){var c=new b;a.registerAdapter("localForage",c,{"default":!0})}]).factory("SettingsResource",["DS",function(a){return a.defineResource("SettingsResource")}]).factory("amvApplicationInfo",[function(){return replaceTaskInvoked?{version:"app"}:{version:"dev"}}]).factory("amvGitInfo",function(){return replaceTaskInvoked?{local:{branch:{shortSHA:"6b73d34",name:"master",lastCommitNumber:"17"}},remote:{origin:{url:"https://github.com/amvnetworks/amv-trafficsoft-geolocation-app.git"}}}:{local:{branch:{shortSHA:"${shortSHA}",name:"${branchName}",lastCommitNumber:"${lastCommitNumber}"}},remote:{origin:{url:"${remoteUrl}"}}}}).factory("amvClientSettingsTemplate",function(){return{api:{baseUrl:"http://www.example.com",options:{contractId:1,auth:{username:"username",password:"password"},vehicleIds:[1,2,3]}},enableStreamingUpdates:!1,enablePeriodicUpdateInterval:!0,periodicUpdateIntervalInSeconds:60,debug:!1}}).factory("amvClientSettings",["SettingsResource",function(a){return{get:function(){return a.findAll().then(function(a){if(1!==a.length)throw new Error("Cannot find settings.");return a[0]})}}}]).factory("amvClientFactory",["amvTrafficsoftRestJs","amvClientSettings",function(a,b){return{get:function(){return b.get().then(function(a){return a.api}).then(function(b){return a(b.baseUrl,b.options)})}}}]).factory("amvXfcdClient",["amvClientFactory",function(a){return{get:function(){return a.get().then(function(a){return a.xfcd()})}}}]).config(["vertxEventBusProvider",function(a){a.enable().useReconnect().useUrlServer("http://geolocation.amv-networks.com").useUrlPath("/eventbus")}]).config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/home"),a.state("home",{url:"/home",templateUrl:"views/page/main.html",controller:"MainCtrl",controllerAs:"main"}).state("settings",{url:"/settings",templateUrl:"views/page/settings.html",controller:"SettingsCtrl",controllerAs:"settings"}).state("vehicle",{url:"/vehicle-detail/:id",templateUrl:"views/page/vehicle-detail.html",controller:"VehicleDetailCtrl",controllerAs:"vehicleDetail",resolve:{amvVehicleId:["$stateParams",function(a){return a.id}]}}).state("about",{url:"/about",templateUrl:"views/page/about.html",controller:"AboutCtrl",controllerAs:"about"})}]).controller("TopNavigationController",["amvGitInfo",function(a){this.gitinfo=angular.copy(a)}]),angular.module("amvGeolocationUi").directive("amvVehicleDetail",[function(){return{transclude:!0,scope:{vehicle:"&vehicle"},controllerAs:"ctrl",controller:["$scope",function(a){function b(a){return!!a&&!!a.location&&a.location.lat&&a.location.lng}var c=this,d=a.vehicle();a.model={},a.model.vehicle=d,a.model.requestTime=moment(d.requestTime),a.model.requestTimeFromNow=moment(d.requestTime).fromNow(),a.model.positionTime=moment(d.data.timestamp),a.model.positionTimeFromNow=moment(d.data.timestamp).fromNow(),this.map={center:{lat:a.model.vehicle.location.lat,lng:a.model.vehicle.location.lng,zoom:12},markers:[],events:{},defaults:{scrollWheelZoom:!0,center:{lat:49,lng:10,zoom:5}},tiles:{url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"},controls:{fullscreen:{position:"topleft"}}},a.$watch(function(){return c.map.center.zoom},function(a){c.map.tiles.url=a>6?"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png":"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"});var e=function(a){return{lat:a.location.lat,lng:a.location.lng,draggable:!1,icon:{iconSize:[48,48],iconAnchor:[24,24],popupAnchor:[0,0]}}},f=function(){c.map.markers=[]},g=function(a){var d=b(a);if(d){var f=e(a);c.map.markers.push(f)}},h=function(a,d){var e=d>0?d:11,f=b(a);f&&(c.map.center={lat:a.location.lat,lng:a.location.lng,zoom:e})};f(),g(a.model.vehicle),h(a.model.vehicle,17)}],templateUrl:"views/directives/amv-vehicle-detail.html"}}]).directive("materializeModal",[function(){return{transclude:!0,scope:{id:"@id",headerText:"@headerText"},templateUrl:"views/directives/materialize-modal.html"}}]).directive("materializeModalActivator",["$window","$compile","$timeout",function(a,b,c){var d=a.$;return{scope:{dismissible:"=",opacity:"@",inDuration:"@",outDuration:"@",startingTop:"@",endingTop:"@",ready:"&?",complete:"&?",open:"=?",enableTabs:"@?"},link:function(a,e,f){c(function(){var c=d(f.href?f.href:"#"+f.target);b(e.contents())(a);var g=function(){angular.isFunction(a.complete)&&a.$apply(a.complete),a.open=!1,a.$apply()},h=function(){angular.isFunction(a.ready)&&a.$apply(a.ready),a.open=!0,a.$apply(),a.enableTabs&&c.find("ul.tabs").tabs()},i={dismissible:angular.isDefined(a.dismissible)?a.dismissible:void 0,opacity:angular.isDefined(a.opacity)?a.opacity:void 0,inDuration:angular.isDefined(a.inDuration)?a.inDuration:void 0,outDuration:angular.isDefined(a.outDuration)?a.outDuration:void 0,startingTop:angular.isDefined(a.startingTop)?a.startingTop:void 0,endingTop:angular.isDefined(a.endingTop)?a.endingTop:void 0,ready:h,complete:g};c.modal(i),e.modal(i),angular.isDefined(f.open)&&c.length>0&&a.$watch("open",function(a){angular.isDefined(a)&&(a===!0?c.modal("open"):c.modal("close"))})})}}}]).directive("materializeTooltipped",["$compile","$timeout",function(a,b){return{restrict:"A",link:function(c,d,e){function f(){d.addClass("tooltipped"),a(d.contents())(c),b(function(){d.attr("data-tooltip-id")&&d.tooltip("remove"),d.tooltip()}),g=c.$on("$destroy",function(){d.tooltip("remove")})}var g=Function.prototype;e.$observe("tooltipped",function(a){"false"===a&&g!==Function.prototype?(d.tooltip("remove"),g(),g=Function.prototype):"false"!==a&&g===Function.prototype&&f()}),"false"!==e.tooltipped&&f(),d.on("$destroy",function(){d.tooltip("remove")}),c.$watch(function(){return d.attr("data-tooltip")},function(a,c){a!==c&&"false"!==e.tooltippify&&b(function(){d.tooltip()})})}}}]),angular.module("amvGeolocationUi").controller("MainCtrl",["$scope","$log","$timeout","Materialize","amvClientSettings","amvXfcdClient",function(a,b,c,d,e,f){function g(a){return!!a&&!!a.location&&a.location.lat&&a.location.lng}function h(a){return{id:a.id,name:a.id,location:{lat:a.latitude,lng:a.longitude},provider:"amv networks",requestTime:Date.now(),date:Date.now(),data:a}}var i=this;this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],this.map={center:{lat:49,lng:10,zoom:3},markers:[],events:{},defaults:{scrollWheelZoom:!0,center:{lat:49,lng:10,zoom:5}},tiles:{url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"},controls:{fullscreen:{position:"topleft"}}},a.$watch(function(){return i.map.center.zoom},function(a){i.map.tiles.url=a>6?"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png":"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"});var j=function(a){var b="<div><h6>"+a.name+'</h6><small><i class="material-icons tiny">room</i> lat/lng: '+a.location.lat+" / "+a.location.lng+'</small><br /><small> <i class="material-icons tiny">av_timer</i> speed: '+(a.data.speed||0)+' km/h</small><br /><span></span><br /><small><i class="material-icons tiny">router</i> Data Provider: '+a.provider+'</small><br /><small><i class="material-icons tiny">query_builder</i> Request Time: '+a.requestTime+'</small><br /><small><i class="material-icons tiny">query_builder</i> Position Time: '+a.data.timestamp+"</small></div>";return{lat:a.location.lat,lng:a.location.lng,message:b,draggable:!1,icon:{iconSize:[48,48],iconAnchor:[24,24],popupAnchor:[0,0]}}},k=function(){i.map.markers=[]},l=function(a){var b=g(a);if(b){var c=j(a);i.map.markers.push(c)}};a.$on("leafletDirectiveMap.mymap.click",function(a,c){var d=c.leafletEvent,e={location:{lat:d.latlng.lat,lng:d.latlng.lng}};b.log("clicked "+e)}),a.zoomToLocation=function(a,b){var c=b>0?b:11,e=g(a);e?(d.toast("Zoom to "+a.name,1e3),i.map.center={lat:a.location.lat,lng:a.location.lng,zoom:c}):d.toast("No location data available for "+a.name,2e3)},function(){a.loading=!0,a.locations=[];var g=function(e){return a.loading=!0,f.get().then(function(a){return a.getLastData(e)}).then(function(a){b.log("ok, got data");var c=!!a.data&&a.data.length>0;return c?a.data:[]})["catch"](function(a){b.log("error, while getting data"),b.log(a);var c=a&&a.response&&a.response.data&&a.response.data.message,e=c?a.response.data.message:a;d.toast(e,4e3),d.toast("Please check your settings.",5e3)})["finally"](function(){c(function(){a.loading=!1},333)})},j=function(b){return g(b).then(function(b){return k(),a.locations=[],b.forEach(function(b){var c=h(b);a.locations.push(c),l(c)}),b})},m=function(a,b){var d=1e3+Math.max(b,5e3);return j(a).then(function(b){return c(function(){m(a,d)},d),b})};e.get().then(function(a){return i.settings=a,a}).then(function(a){i.settings=a;var b=a.api||{},c=b.options.vehicleIds||[],e=1e3*(a.periodicUpdateIntervalInSeconds||10),f=a.enablePeriodicUpdateInterval;f=!1;var g=f?function(){return m(c,e)}:function(){return j(c)};g().then(function(a){0===a.length?d.toast("Response contains empty data!",2e3):d.toast("Finished loading "+a.length+" location(s)",1e3)})})["catch"](function(c){b.log(c),a.loading=!1,d.toast("Please check your settings.",3e3)})}()}]),angular.module("amvGeolocationUi").controller("SettingsCtrl",["Materialize","SettingsResource","amvClientSettingsTemplate",function(a,b,c){var d=this,e=c;b.findAll().then(function(a){0!==a.length?d.config=angular.copy(a[0]):b.create(e).then(function(a){d.config=angular.copy(a)})}),this.saveSettings=function(c){b.destroyAll().then(function(){b.create(c).then(function(b){d.config=angular.copy(b),a.toast("Settings saved!",3e3)})})},this.loadDefaultSettings=function(){d.config=angular.copy(e)},this.addValueToVehicleIds=function(a){a&&a>0&&d.config.api.options.vehicleIds.push(a)},this.onKeyUpOnNewVehicleIdInput=function(a,b){var c=13===a.keyCode;c&&d.addValueToVehicleIds(b)},this.removeVehicleIdWithValue=function(a){var b=d.config.api.options.vehicleIds.indexOf(a);b>=0&&d.config.api.options.vehicleIds.splice(b,1)}}]),angular.module("amvGeolocationUi").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("amvGeolocationUi").controller("VehicleDetailCtrl",["$scope","$log","$timeout","Materialize","amvClientSettings","amvXfcdClient","amvVehicleId",function(a,b,c,d,e,f,g){function h(a){return{id:a.id,name:a.id,location:{lat:a.latitude,lng:a.longitude},provider:"amv networks",requestTime:Date.now(),date:Date.now(),data:a}}if(!g)return d.toast("`vehicleId` is invalid. Cannot show details.",2e3),void(a.error="`vehicleId` is invalid. Cannot show details.");var i=this;!function(){a.loading=!0,a.locations=[];var j=function(e){return a.loading=!0,f.get().then(function(a){return a.getLastData(e)}).then(function(a){b.log("ok, got data");var c=!!a.data&&a.data.length>0;return c?a.data:[]})["catch"](function(a){b.log("error, while getting data"),b.log(a);var c=a&&a.response&&a.response.data&&a.response.data.message,e=c?a.response.data.message:a;d.toast(e,4e3),d.toast("Please check your settings.",5e3)})["finally"](function(){c(function(){a.loading=!1},333)})},k=function(b){return j(b).then(function(b){return a.locations=[],b.forEach(function(b){var c=h(b);a.locations.push(c)}),b})},l=function(a,b){var d=1e3+Math.max(b,5e3);return k(a).then(function(b){return c(function(){l(a,d)},d),b})};e.get().then(function(a){return i.settings=a,a}).then(function(a){i.settings=a;var b=[g],c=1e3*(a.periodicUpdateIntervalInSeconds||10),e=a.enablePeriodicUpdateInterval,f=e?function(){return l(b,c)}:function(){return k(b)};f().then(function(a){0===a.length?d.toast("Response contains empty data!",2e3):d.toast("Finished loading "+a.length+" location(s)",1e3)})})["catch"](function(c){b.log(c),a.loading=!1,d.toast("Please check your settings.",3e3)})}()}]),angular.module("amvGeolocationUi").run(["$templateCache",function(a){a.put("views/directives/amv-vehicle-detail.html",'<div> <div> <div class="col s12 m12 l6"> <div class="row"> <div class="col s12 m12 l12"> <h2>{{ model.vehicle.name }}</h2> <i class="material-icons tiny">query_builder</i> Request Time: {{ model.requestTimeFromNow }} <small>({{ model.requestTime }})</small> <br> <i class="material-icons tiny">router</i> Data Provider: {{ model.vehicle.provider }} <br> <br> <i class="material-icons tiny">room</i> lat/lng: {{model.vehicle.location.lat}} / {{ model.vehicle.location.lng }} <br> <i class="material-icons tiny">query_builder</i> Position Time: {{ model.positionTimeFromNow }} <small>({{ model.positionTime }})</small> <br> <i class="material-icons tiny">av_timer</i> speed: {{ (model.vehicle.data.speed || 0) }} km/h </div> </div> <div class="col s12 m12 l12" style="padding: 0"> <ul> <li data-ng-repeat="xfcd in model.vehicle.data.xfcds"> <div> <i class="material-icons tiny">label</i> {{ xfcd.param }}: <span>{{ xfcd.value }}</span> </div> </li> </ul> <ul> <li data-ng-repeat="state in model.vehicle.data.states"> <div> <i class="material-icons tiny">label</i> {{ state.param }}: <span>{{ state.value }}</span> </div> </li> </ul> </div> </div> </div> <div class="col s12 m12 l6" style="padding: 9px"> <leaflet id="mymap" defaults="ctrl.map.defaults" center="ctrl.map.center" markers="ctrl.map.markers" tiles="ctrl.map.tiles" height="350px"> </leaflet> </div> </div>'),a.put("views/directives/materialize-modal.html",'<div id="{{ id }}" class="modal bottom-sheet"> <div class="modal-content"> <h4>{{ headerText }}</h4> <div data-ng-transclude></div> </div> <div class="modal-footer"> <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Agree</a> </div> </div>'),a.put("views/page/about.html",'<div class="container"> <div class="section"> <div class="row"> <div class="col s12 m12"> <p>This is the about view.</p> </div> </div> </div> </div>'),a.put("views/page/main.html",'<div class="progress amber" style="margin: 0" data-ng-show="loading"> <div class="indeterminate amber lighten-4"></div> </div> <div class="row" style="margin-bottom: 0"> <div class="col s6 m4 l3" style="padding: 0"> <div style="height: 600px; overflow-y: scroll; overflow-x: hidden"> <form class=""> <div class="input-field col s12"> <input placeholder="" id="filterInput" type="text" data-ng-model="filterInput"> <label for="filterInput">Filter</label> </div> </form> <div class="collection"> <div class="collection-item" data-ng-repeat="geolocation in locations | filter:filterInput"> <span class="badge">{{$index + 1}}</span> <header> <h5>{{ geolocation.name }}</h5> </header> <div class="left"> <ul style="margin: 0"> <li> <i class="material-icons tiny">room</i> <small data-ng-show="geolocation.location.lat && geolocation.location.lng"> lat/lng: {{ geolocation.location.lat }} / {{ geolocation.location.lng }} </small> <small data-ng-hide="geolocation.location.lat && geolocation.location.lng"> lat/lng: No location data available. </small> </li> <li> <i class="material-icons tiny">av_timer</i> <small> speed: {{ geolocation.data.speed || 0 }} km/h </small> </li> </ul> </div> <div class="right"> <a class="btn-floating waves-effect waves-light amber" data-ng-click="zoomToLocation(geolocation, 17)" data-materialize-tooltipped data-delay="50" data-tooltip="zoom to location"> <i class="material-icons">my_location</i> </a> <a class="btn-floating waves-effect waves-light amber" data-ui-sref="vehicle({id: geolocation.id})" data-materialize-tooltipped data-delay="50" data-tooltip="view additional information"> <i class="material-icons">perm_device_information</i> </a> <!--a class="btn-floating waves-effect waves-light amber"\n               data-materialize-modal-activator data-target="modal-geolocation-{{geolocation.name}}"\n               data-materialize-tooltipped data-delay="50" data-tooltip="view additional information">\n              <i class="material-icons">perm_device_information</i>\n            </a--> <!--div data-materialize-modal data-id="modal-geolocation-{{geolocation.name}}"\n                 data-header-text="{{geolocation.name}}">\n              <div>\n                <i class="material-icons tiny">room</i> lat/lng: {{geolocation.location.lat}} / {{\n                geolocation.location.lng }}\n\n                <br/>\n                <i class="material-icons tiny">av_timer</i> speed: {{ (geolocation.data.speed || 0) }} km/h\n\n                <br/>\n                <br/>\n\n                <i class="material-icons tiny">router</i> Data Provider: {{ geolocation.provider }}\n                <br/><i class="material-icons tiny">query_builder</i> Request Time: {{ geolocation.requestTime }}\n\n                <br/>\n                <i class="material-icons tiny">query_builder</i> Position Time: {{ geolocation.data.timestamp }}\n\n              </div>\n\n              <ul>\n                <li data-ng-repeat="xfcd in geolocation.data.xfcds">\n                  <div>\n                    <i class="material-icons tiny">label</i>\n                    {{ xfcd.param }}: <span>{{ xfcd.value }}</span>\n                  </div>\n                </li>\n              </ul>\n              <ul>\n                <li data-ng-repeat="state in geolocation.data.states">\n                  <div>\n                    <i class="material-icons tiny">label</i>\n                    {{ state.param }}: <span>{{ state.value }}</span>\n                  </div>\n                </li>\n              </ul>\n            </div--> </div> <div style="float:none; clear:both"></div> <div data-ng-if="main.settings.debug"> {{ geolocation.data | json }} </div> </div> </div> </div> </div> <div class="col s6 m8 l9" style="padding: 0"> <leaflet id="mymap" defaults="main.map.defaults" center="main.map.center" markers="main.map.markers" tiles="main.map.tiles" height="600px"> </leaflet> </div> </div>'),a.put("views/page/settings.html",'<div class="container"> <div class="section"> <div class="row"> <div class="col s12 m12"> <h2 class="header light"> Settings <a class="waves-effect waves-light btn-large amber right" data-ng-click="settings.saveSettings(settings.config)"> <i class="material-icons left">done</i> Save </a> </h2> <div class="col s12"> <h3 class="header light">API Settings</h3> <ul class="collection"> <li class="collection-item"> <div class="input-field"> <input id="baseUrl" type="text" class="validate" data-ng-model="settings.config.api.baseUrl"> <label class="active" for="baseUrl">Base URL</label> </div> <div class="row" style="margin-bottom: 0"> <div class="input-field col s6"> <input id="username" type="text" class="validate" data-ng-model="settings.config.api.options.auth.username"> <label class="active" for="username">Username</label> </div> <div class="input-field col s6"> <input id="password" type="password" class="validate" data-ng-model="settings.config.api.options.auth.password"> <label class="active" for="password">Password</label> </div> </div> <div class="input-field"> <input id="contractId" type="number" class="validate" data-ng-model="settings.config.api.options.contractId"> <label class="active" for="contractId">ContractId</label> </div> <h6>Vehicle Ids</h6> <div class="chip" data-ng-repeat="vehicleId in settings.config.api.options.vehicleIds track by $index"> {{ vehicleId }} <i class="material-icons" data-ng-click="settings.removeVehicleIdWithValue(vehicleId)" style="cursor: pointer">close</i> </div> <div class="file-field input-field"> <div class="waves-effect waves-light btn right" data-ng-click="settings.addValueToVehicleIds(__newVehicleId); __newVehicleId = null;"> Add </div> <div class="file-path-wrapper"> <input id="__newVehicleId" type="number" class="validate" data-ng-model="__newVehicleId" data-ng-keyup="settings.onKeyUpOnNewVehicleIdInput($event, __newVehicleId)"> <label class="active" for="__newVehicleId">Add VehicleId</label> </div> </div> </li> </ul> <h3 class="header light">Application Settings</h3> <ul class="collection"> <li class="collection-item" style="cursor: pointer" data-ng-class="{ \'grey lighten-3\' : settings.optOut }" data-ng-click="settings.toggleOptOut()"> <span class="title">Realtime position updates</span> <div class="switch right"> <label> Aus <input type="checkbox" data-ng-model="settings.config.enableStreamingUpdates" data-ng-true-value="true" data-ng-false-value="false" data-ng-change-disabled="settings.doOnStateChange()"> <span class="lever"></span> Ein </label> </div> <p data-ng-if="settings.config.enableStreamingUpdates"> Realtime geolocation information updates are <strong class="green-text">enabled</strong>! Recently fetched geolocation information will be displayed in your map. </p> <p data-ng-if="!settings.config.enableStreamingUpdates"> Realtime geolocation information updates are <strong class="grey-text">disabled</strong>! Currently no recently fetched geolocation information will be displayed. </p> </li> <li class="collection-item" style="cursor: pointer" data-ng-class="{ \'grey lighten-3\' : settings.optOut }" data-ng-click="settings.toggleOptOut()"> <span class="title">Enable periodic update interval</span> <div class="switch right"> <label> Aus <input type="checkbox" data-ng-model="settings.config.enablePeriodicUpdateInterval" data-ng-true-value="true" data-ng-false-value="false" data-ng-change-disabled="settings.doOnStateChange()"> <span class="lever"></span> Ein </label> </div> <p data-ng-if="settings.config.enablePeriodicUpdateInterval"> Periodic update interval is <strong class="green-text">enabled</strong>! Information will be updated every {{ settings.config.periodicUpdateIntervalInSeconds }} seconds. </p> <p data-ng-if="!settings.config.enablePeriodicUpdateInterval"> Periodic update interval is <strong class="grey-text">disabled</strong>! Information will be gathered once and will NOT be updated. </p> </li> <li class="collection-item"> <div class="input-field"> <input id="periodicUpdateIntervalInSeconds" type="number" class="validate" min="5" data-ng-model="settings.config.periodicUpdateIntervalInSeconds" data-ng-disabled="!settings.config.enablePeriodicUpdateInterval"> <label class="active" for="periodicUpdateIntervalInSeconds">Periodic Update Interval In Seconds</label> </div> </li> <li class="collection-item" style="cursor: pointer" data-ng-class="{ \'grey lighten-3\' : settings.optOut }" data-ng-click="settings.toggleOptOut()"> <span class="title">Debug Mode</span> <div class="switch right"> <label> Aus <input type="checkbox" data-ng-model="settings.config.debug" data-ng-true-value="true" data-ng-false-value="false" data-ng-change-disabled="settings.doOnStateChange()"> <span class="lever"></span> Ein </label> </div> <p data-ng-if="settings.config.debug"> Debug Mode is <strong class="green-text">enabled</strong>! The application will output and display more fine grained messages. </p> <p data-ng-if="!settings.config.debug"> Debug Mode is <strong class="grey-text">disabled</strong>! The application will NOT output or display detailed messages. </p> </li> </ul> </div> </div> <div class="col s12 m12"> <a class="waves-effect waves-light btn right" data-ng-click="settings.loadDefaultSettings()"> <i class="material-icons left">settings_backup_restore</i> Load default values </a> </div> <div class="col s12 m12"> <p data-ng-if="settings.config.debug"> <code> {{ settings.config | json }} </code> </p> </div> </div> </div> </div>'),a.put("views/page/vehicle-detail.html",'<div class="progress amber" style="margin: 0" data-ng-show="loading"> <div class="indeterminate amber lighten-4"></div> </div> <div class="row" style="margin-bottom: 0"> <div class="container"> <div data-ng-if="error"> There has been an error. <div>{{ vehicleDetails.error }}</div> </div> <div data-ng-repeat="vehicle in locations"> <div data-amv-vehicle-detail data-vehicle="vehicle"></div> </div> </div> </div>'),a.put("views/partials/footer.html",'<footer class="page-footer bgcolor-brand"> <div class="container"> <div class="row"> <div class="col l6 s12"> <h5 class="white-text">amv Geolocation</h5> <ul> <li><a class="white-text" data-ui-sref="about">About</a></li> <li><a class="white-text" href="https://www.amv-networks.com/en/data-protection/">Privacy</a></li> <li><a class="white-text" href="https://www.amv-networks.com/en/imprint/">Impress</a></li> <li><a class="white-text" href="https://www.amv-networks.com/en/gtc/">Terms and Conditions</a></li> </ul> </div> <div class="col l6 s12"> <!--h5 class="white-text">Company Bio</h5--> <p class="grey-text text-lighten-4"></p> </div> </div> </div> <div class="footer-copyright"> <div class="container"> <p class="left"> made with <i class="material-icons tiny">favorite</i> by <a class="brown-text" href="https://www.amv-networks.com">amv</a> </p> </div> </div> </footer>'),a.put("views/partials/top-navigation.html",'<nav class="nav-extended white" role="navigation" data-ng-controller="TopNavigationController as topnavigation"> <div class="nav-wrapper container"> <a id="logo-container" href="#/" class="brand-logo"> <span class="amv">amv</span> Geolocation <small style="font-size: 50%"> {{topnavigation.gitinfo.local.branch.name}}-{{topnavigation.gitinfo.local.branch.shortSHA}} </small> </a> <ul class="right hide-on-med-and-down"> <li ui-sref-active="active"><a data-ui-sref="home">Home</a></li> <li ui-sref-active="active"><a data-ui-sref="settings">Settings</a></li> <li ui-sref-active="active"><a data-ui-sref="about">About</a></li> </ul> <ul id="nav-mobile" class="side-nav"> <li ui-sref-active="active"><a data-ui-sref="home">Home</a></li> <li ui-sref-active="active"><a data-ui-sref="settings">Settings</a></li> <li ui-sref-active="active"><a data-ui-sref="about">About</a></li> </ul> <a href="#" data-activates="nav-mobile" class="button-collapse"><i class="material-icons">menu</i></a> </div> <!--div class="nav-content container">\r\n    <ul class="tabs">\r\n      <li class="tab"><a href="#test1">Test 1</a></li>\r\n      <li class="tab"><a class="active" href="#test2">Test 2</a></li>\r\n      <li class="tab disabled"><a href="#test3">Disabled Tab</a></li>\r\n      <li class="tab"><a href="#test4">Test 4</a></li>\r\n    </ul>\r\n  </div--> </nav> <script>(function ($) {\r\n    $(function () {\r\n      $(\'.button-collapse\').sideNav();\r\n    });\r\n  })(jQuery);</script>')}]);